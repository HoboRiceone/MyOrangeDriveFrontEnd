{"remainingRequest":"/home/hobo/code/odd6871/node_modules/thread-loader/dist/cjs.js!/home/hobo/code/odd6871/node_modules/babel-loader/lib/index.js!/home/hobo/code/odd6871/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/hobo/code/odd6871/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hobo/code/odd6871/src/components/subpage/Filemanagement.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/hobo/code/odd6871/src/components/subpage/Filemanagement.vue","mtime":1587586048334},{"path":"/home/hobo/code/odd6871/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hobo/code/odd6871/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hobo/code/odd6871/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hobo/code/odd6871/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hobo/code/odd6871/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Filemanagement.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div ref=\"getheight\" class=\"filemanagement\">\n    <el-container style=\"width:99%; margin: 0px; padding: 0px;  border:0px;\">\n      <el-header class=\"toolview\">\n      <el-upload\n        style=\"float:left;margin-right:1%\"\n          action=\"123\"\n          :http-request=\"upload\"\n          :with-credentials=\"true\"\n          :show-file-list=\"false\">\n          <el-button type=\"primary\" style=\"width:120px;\">Upload</el-button>\n        </el-upload>\n        <el-popover\n          placement=\"top\"\n          width=\"400\"\n          v-model=\"newfoldershow\">\n          <div>\n            <el-input v-model=\"newfoldername\" style=\"float:left;width:85%\"></el-input> \n            <el-button style=\"float:left;margin-left:3%\" type=\"primary\" icon=\"el-icon-check\" circle plain @click=\"createfolder\"></el-button>\n          </div>\n          <el-button slot=\"reference\" class=\"toolcompent\" type=\"primary\" plain>New Folder</el-button>\n        </el-popover>\n      </el-header>\n      <div style=\"margin-left:1%;\">\n        <p class=\"dirback\" style=\"float:left;font-size:1em;color:#409EFF;\" type=\"text\" @click=\"backpredir\">Back </p>\n         <p style=\"float: left;font-size:1em;margin-left:0.5%;\"> | {{current_dir_name}}</p>\n      </div>  \n      <div class=\"typemenu\">\n        <p style=\"text-align: left;margin:0;margin-left:2.3%;width:30%;float:left;\">file name</p>\n        <p style=\"text-align: left;margin:0;width:20%;float:left;\">size</p>\n      </div>\n      <div style=\"height:2%\"></div>\n      <div ref=\"setheight\" class=\"fileviewscroll\">\n        <div v-for=\"(item,index) in folderitems\" :key=\"'folder'+index\" style=\"padding: 0px;display:block;\">\n            <folderitem :foldername=\"item.getname\" :folderid=\"item.getid\" :folderpreid=\"item.getpreid\"></folderitem>\n        </div>\n        <div v-for=\"(item,index) in fileitems\" :key=\"'file'+index\">\n            <fileitem :filename=\"item.getname\" :filesize=\"item.getsize\" :fileid=\"item.getid\"></fileitem>\n        </div>\n      </div>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport SparkMD5 from 'spark-md5';\nimport axios from 'axios';\nimport folderitem from \"./Fileitems/folderitem\";\nimport fileitem from \"./Fileitems/fileitem\";\nexport default {\n  name: 'Filemanagement',\n  data ()\n  {\n    return{\n      fileList:[{}],\n      folderitems: [],\n      fileitems: [],\n      current_dir_id: -1,\n      current_dir_name: 'All files',\n      pre_dir_id: 0,\n      newfoldershow: false,\n      newfoldername:\"\",\n    };\n  },\n  components:\n  {\n    folderitem,\n    fileitem\n  },\n  methods:\n  {\n    flushDir(newDir)\n    {\n      this.current_dir_id = newDir.dirID;\n      this.folderitems = [];\n      this.fileitems = [];\n      this.$api.get('/api/dirs/'+this.current_dir_id,\n      {\n        'x-auth-token': this.Common.xtoken\n      }, \n      {\n        only_dir: false                       //'1231234'\n      }, response => {\n      if (response.status == 200) \n      {\n        var folderslist;\n        var fileslist;\n        this.pre_dir_id=response.data.result_data.pre_id;\n        if(response.data.result_data.pre_id == 0)\n        {\n          this.current_dir_name=\"All files\"\n        }\n        else\n        {\n          this.current_dir_name=response.data.result_data.name+\"/\"\n        }\n        folderslist = response.data.result_data.dirs;\n        fileslist = response.data.result_data.files;\n        for (var keyfolder in folderslist)\n        {\n          this.folderitems.push({getname: folderslist[keyfolder].name, getid: folderslist[keyfolder].id, getpreid: this.current_dir_id});\n        }\n        for (var keyfile in fileslist)\n        {\n          this.fileitems.push({getname: fileslist[keyfile].name, getsize: fileslist[keyfile].size, getid: fileslist[keyfile].id});\n        }\n        \n      } \n      else if(response.status == 400)\n      {\n        alert(response.data.msg);\n        \n      }\n      else\n      {\n        alert(\"Network Error\");\n        console.log(response);\n      }\n      });\n    },\n\n    upload(res)\n    {\n      let file = res.file;  //注意：直接上传file文件，不要用FormData对象的形式传\n      let config = {\n          headers: {\n              'Content-Type': 'multipart/form-data'\n          }\n      };\n      this.generatorFileMd5(file);\n\n      //从接口获取presigned url\n              //需要用put方法上传，post会报405，aws官方规定是put方法\n      // axios.put(presignedUrl, file, config)\n      //     .then(res1 => {\n      //         if (res1.status == 200) {\n      //           console.log(res1);\n      //         }\n      //     });\n    },\n    filedownload()\n    {\n      var link = document.createElement('a');\n      link.download='text';\n      link.href = \"https://my-bucket-glai-01.s3.us-east-2.amazonaws.com/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA_3456324?response-content-disposition=attachment%3Bfilename%3Dhello-kitty.pdf&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20200418T145706Z&X-Amz-SignedHeaders=host&X-Amz-Expires=604799&X-Amz-Credential=AKIAUIHAYCXRZ3RDTMT3%2F20200418%2Fus-east-2%2Fs3%2Faws4_request&X-Amz-Signature=fe1c73a27f6de9340e05fe1982e16241d56c68065a807dfda9882976fdffbdef\";\n      link.click();\n    },\n    generatorFileMd5(file) {\n      /**\n        * 生成MD5\n        */\n      let blobSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice\n        // file = this.files[0],\n      let chunkSize = 2097152                           // Read in chunks of 2MB\n      let chunks = Math.ceil(file.size / chunkSize)\n      let currentChunk = 0\n      let spark = new SparkMD5.ArrayBuffer()\n      let fileReader = new FileReader()\n      const _this=this;\n      fileReader.onload = function (e) {\n          // console.log('read chunk nr', currentChunk + 1, 'of', chunks)\n          spark.append(e.target.result)                  // Append array buffer\n          currentChunk++;\n\n          if (currentChunk < chunks) {\n              loadNext();\n          } else {\n              // console.info('computed hash', spark.end())  // spark.end(): 文件 MD5值生成完成\n              var md5code=spark.end();\n              _this.$api.get('/api/upload',\n              {\n                'x-auth-token': _this.Common.xtoken\n              }, \n              {\n                fileName: file.name,\n                fileSize: file.size,\n                fileMD5: md5code,\n                dirId: _this.current_dir_id\n              }, response => {\n              if (response.status == 200) \n              {\n                var uploadurl;\n                var uploadkey;\n                uploadurl=response.data.result_data.upload_url;\n                uploadkey=response.data.result_data.upload_key;\n                let config = {headers: {'Content-Type': 'multipart/form-data'}};\n\n                  //从接口获取presigned url\n                          //需要用put方法上传，post会报405，aws官方规定是put方法\n                  axios.put(uploadurl, file, config)\n                  .then(res1 => {\n                      if (res1.status == 200) {\n                        console.log(file.name);\n                        console.log(file.size);\n                        console.log(md5code);\n                        console.log(_this.current_dir_id);\n                        console.log(uploadkey);\n                        var jsondata=JSON.stringify({\n                          \"file_name\": file.name,\n                          \"size\": file.size,\n                          \"md5\": md5code,\n                          \"dir_id\": _this.current_dir_id,\n                          \"upload_key\": uploadkey\n                        });\n                        console.log(jsondata);\n                        _this.$http2.post(_this.Common.baseurl+\"/api/upload\", \n                        jsondata, \n                        {\n                          headers: {'x-auth-token': _this.Common.xtoken, 'Content-Type': 'application/json'}\n                        })\n                        .then(response => {\n                            if (response.status == 200) {\n                              _this.$notify({title: 'Notification',message: 'Success!',duration: 3000});\n                            }\n                        })\n                        .catch(function (error) {\n                          console.log(error.response);\n                        });\n                      }\n                  });\n              } \n              else\n              {\n                alert(\"Error\");\n                console.log(response);\n              }\n              });\n          }\n      };\n\n      fileReader.onerror = function () {\n          console.warn('fileReader.onerror is error')\n      };\n\n      function loadNext() {\n          var start = currentChunk * chunkSize,\n              end = ((start + chunkSize) >= file.size) ? file.size : start + chunkSize;\n\n          fileReader.readAsArrayBuffer(blobSlice.call(file, start, end))\n      }\n      loadNext()\n    },\n    createfolder()\n    {\n      this.$http2.put(this.Common.baseurl+\"/api/dirs/\", \n      {\n        \"name\": this.newfoldername,\n        \"parent_id\": this.current_dir_id\n      }, \n      {\n        headers: {'x-auth-token': this.Common.xtoken}\n      })\n      .then(response => {\n          if (response.status == 200) {\n            this.$notify({title: 'Notification',message: 'Success!',duration: 3000});\n            var nextdir={dirID: this.current_dir_id}\n            this.flushDir(nextdir);\n          }\n      })\n      .catch(function (error) {\n        alert(\"Error: \"+error.response.data.msg);\n      });\n      this.newfoldershow=false;\n    },\n    backpredir()\n    {\n      var nextdir={dirID: this.pre_dir_id}\n      if(this.pre_dir_id != 0)\n      {\n        this.flushDir(nextdir);\n      }\n    }\n  },\n  created: function () \n  {\n    this.$bus.on('updateDirID', this.flushDir);\n  },\n  mounted: function () \n  {\n    this.$refs.setheight.style.height = ((this.$refs.getheight.offsetHeight)*0.84)+'px';\n    this.$api.get('/api/dirs', \n    {\n      'x-auth-token': this.Common.xtoken\n    },\n    {                      //'johnwick123@gmail.com',\n      only_dir: false                       //'1231234'\n    }, response => {\n    if (response.status == 200) \n    {\n      var folderslist;\n      var fileslist;\n\n      this.current_dir_id=response.data.result_data.curr_id;\n      this.pre_dir_id=response.data.result_data.pre_id;\n      folderslist = response.data.result_data.dirs;\n      fileslist = response.data.result_data.files;\n      for (var keyfolder in folderslist)\n      {\n        this.folderitems.push({getname: folderslist[keyfolder].name, getid: folderslist[keyfolder].id, getpreid: this.current_dir_id});\n      }\n      for (var keyfile in fileslist)\n      {\n        this.fileitems.push({getname: fileslist[keyfile].name, getsize: fileslist[keyfile].size, getid: fileslist[keyfile].id});\n      }\n      \n    } \n    else if(response.status == 400)\n    {\n      alert(response.data.msg);\n      \n    }\n    else\n    {\n      alert(\"Network Error\");\n    }\n    });\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.filemanagement\n{\n  background-color:white;\n  margin: 0px;\n  padding: 0px;\n  height:100%;\n  width:100%;\n}\n.fileview\n{\n  text-align: left;\n}\n.toolview\n{\n  padding:0.5%;\n}\n.toolcompent\n{\n  float:left;\n  width:120px;\n}\n.fileviewscroll\n{\n  overflow-x:hidden; \n  border-top:1px solid #F2F6FD;\n}\n.typemenu\n{\n\n  width:100%;\n}\n.dirback:hover\n{\n  text-decoration: underline;\n}\n</style>\n"],"sourceRoot":"src/components/subpage"}]}