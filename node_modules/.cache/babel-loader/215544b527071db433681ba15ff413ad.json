{"remainingRequest":"/home/hobo/code/odd6871/node_modules/thread-loader/dist/cjs.js!/home/hobo/code/odd6871/node_modules/babel-loader/lib/index.js!/home/hobo/code/odd6871/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/hobo/code/odd6871/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hobo/code/odd6871/src/components/subpage/Filemanagement.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/hobo/code/odd6871/src/components/subpage/Filemanagement.vue","mtime":1588465080993},{"path":"/home/hobo/code/odd6871/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hobo/code/odd6871/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hobo/code/odd6871/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hobo/code/odd6871/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hobo/code/odd6871/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Filemanagement.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div ref=\"getheight\" class=\"filemanagement\">\n    <el-container style=\"width:99%; margin: 0px; padding: 0px;  border:0px;\">\n      <el-header class=\"toolview\">\n      <el-upload\n        style=\"float:left;margin-right:1%\"\n          action=\"123\"\n          :http-request=\"upload\"\n          :with-credentials=\"true\"\n          :show-file-list=\"false\">\n          <el-button type=\"primary\" style=\"width:120px;\">Upload</el-button>\n        </el-upload>\n        <el-popover\n          placement=\"top\"\n          width=\"400\"\n          v-model=\"newfoldershow\">\n          <div>\n            <el-input v-model=\"newfoldername\" style=\"float:left;width:85%\"></el-input> \n            <el-button style=\"float:left;margin-left:3%\" type=\"primary\" icon=\"el-icon-check\" circle plain @click=\"createfolder\"></el-button>\n          </div>\n          <el-button slot=\"reference\" class=\"toolcompent\" type=\"primary\" plain>New Folder</el-button>\n        </el-popover>\n      </el-header>\n      <el-progress :style=\"uploadpercentageshow\" :percentage=\"uploadpercentage\"></el-progress>\n      <div style=\"margin-left:1%;\">\n        <p class=\"dirback\" style=\"float:left;font-size:1em;color:#409EFF;\" type=\"text\" @click=\"backpredir\">Back </p>\n        <p style=\"float: left;font-size:1em;margin-left:0.5%;\"> | {{current_dir_name}}</p>\n      </div>  \n      <div class=\"typemenu\">\n        <p style=\"text-align: left;margin:0;margin-left:2.3%;width:30%;float:left;\">file name</p>\n        <p style=\"text-align: left;margin:0;width:20%;float:left;\">size</p>\n        <p style=\"text-align: left;margin:0;width:20%;float:left;\">created date</p>\n      </div>\n      <div style=\"height:2%\"></div>\n      <div ref=\"setheight\" class=\"fileviewscroll\">\n        <div v-for=\"(item,index) in folderitems\" :key=\"'folder'+index\" style=\"padding: 0px;display:block;\">\n            <folderitem :foldername=\"item.getname\" :folderid=\"item.getid\" :folderpreid=\"item.getpreid\" :createddate=\"item.getdate\"></folderitem>\n        </div>\n        <div v-for=\"(item,index) in fileitems\" :key=\"'file'+index\">\n            <fileitem :filename=\"item.getname\" :filesize=\"item.getsize\" :fileid=\"item.getid\" :dirpreid=\"item.getpreid\" :createddate=\"item.getdate\"></fileitem>\n        </div>\n      </div>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport SparkMD5 from 'spark-md5';\nimport axios from 'axios';\nimport folderitem from \"./Fileitems/folderitem\";\nimport fileitem from \"./Fileitems/fileitem\";\nexport default {\n  name: 'Filemanagement',\n  data ()\n  {\n    return{\n      fileList:[{}],\n      folderitems: [],\n      fileitems: [],\n      current_dir_id: -1,\n      current_dir_name: 'All files',\n      pre_dir_id: 0,\n      newfoldershow: false,\n      newfoldername:\"\",\n      uploadpercentage:0,\n      uploadpercentageshow: \"display:none\",\n    };\n  },\n  components:\n  {\n    folderitem,\n    fileitem\n  },\n  methods:\n  {\n    flushDir(newDir)\n    {\n      this.current_dir_id = newDir.dirID;\n      this.folderitems = [];\n      this.fileitems = [];\n      this.$api.get('/api/dirs/'+this.current_dir_id,\n      {\n        'x-auth-token': this.Common.xtoken\n      }, \n      {\n        only_dir: false                       //'1231234'\n      }, response => {\n      if (response.status == 200) \n      {\n        var folderslist;\n        var fileslist;\n        this.pre_dir_id=response.data.result_data.pre_id;\n        if(response.data.result_data.pre_id == 0)\n        {\n          this.current_dir_name=\"All files\"\n        }\n        else\n        {\n          this.current_dir_name=response.data.result_data.name+\"/\"\n        }\n        folderslist = response.data.result_data.dirs;\n        fileslist = response.data.result_data.files;\n        for (var keyfolder in folderslist)\n        {\n          this.folderitems.push({getname: folderslist[keyfolder].name, getid: folderslist[keyfolder].id, getpreid: this.current_dir_id, getdate: folderslist[keyfolder].create_date});\n        }\n        for (var keyfile in fileslist)\n        {\n          this.fileitems.push({getname: fileslist[keyfile].name+\".\"+fileslist[keyfile].suffixes, getsize: fileslist[keyfile].size, getid: fileslist[keyfile].id, getpreid: this.current_dir_id,getdate:fileslist[keyfile].create_date});\n        }\n        \n      } \n      else if(response.status == 400)\n      {\n        alert(response.data.msg);\n        \n      }\n      else if(response.status == 403)\n      {\n        alert(response.data.msg);\n        \n      }\n      else\n      {\n        alert(\"Network Error\");\n        console.log(response);\n      }\n      });\n    },\n\n    upload(res)\n    {\n      let file = res.file;  //注意：直接上传file文件，不要用FormData对象的形式传\n\n      this.uploadpercentageshow=\"display:inline\";\n      this.generatorFileMd5(file);\n\n      //从接口获取presigned url\n              //需要用put方法上传，post会报405，aws官方规定是put方法\n      // axios.put(presignedUrl, file, config)\n      //     .then(res1 => {\n      //         if (res1.status == 200) {\n      //           console.log(res1);\n      //         }\n      //     });\n    },\n    generatorFileMd5(file) {\n      /**\n        * 生成MD5\n        */\n      let blobSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice\n        // file = this.files[0],\n      let chunkSize = 2097152                           // Read in chunks of 2MB\n      let chunks = Math.ceil(file.size / chunkSize)\n      let currentChunk = 0\n      let spark = new SparkMD5.ArrayBuffer()\n      let fileReader = new FileReader()\n      const _this=this;\n      fileReader.onload = function (e) {\n          // console.log('read chunk nr', currentChunk + 1, 'of', chunks)\n          spark.append(e.target.result)                  // Append array buffer\n          currentChunk++;\n\n          if (currentChunk < chunks) {\n              loadNext();\n          } else {\n              // console.info('computed hash', spark.end())  // spark.end(): 文件 MD5值生成完成\n              var md5code=spark.end();\n              _this.uploadpercentage=10;\n              _this.$api.get('/api/upload',\n              {\n                'x-auth-token': _this.Common.xtoken\n              }, \n              {\n                fileName: file.name,\n                fileSize: file.size,\n                fileMD5: md5code,\n                dirId: _this.current_dir_id\n              }, response => {\n              if (response.status == 200) \n              {\n                if(response.data.result_data.upload_url != null)\n                {\n                  var uploadurl;\n                  var uploadkey;\n                  uploadurl=response.data.result_data.upload_url;\n                  uploadkey=response.data.result_data.upload_key;\n                  let config = {headers: {'Content-Type': 'multipart/form-data'},\n                                 onUploadProgress: progressEvent => {\n                                  _this.uploadpercentage = parseInt((progressEvent.loaded / progressEvent.total * 90)+10);\n                                }};\n\n                    //从接口获取presigned url\n                            //需要用put方法上传，post会报405，aws官方规定是put方法\n                    axios.put(uploadurl, file, config)\n                    .then(res1 => {\n                        if (res1.status == 200) {\n                          var jsondata=JSON.stringify({\n                            \"file_name\": file.name,\n                            \"size\": file.size,\n                            \"md5\": md5code,\n                            \"dir_id\": _this.current_dir_id,\n                            \"upload_key\": uploadkey\n                          });\n                          _this.$http2.post(_this.Common.baseurl+\"/api/upload\", \n                          jsondata, \n                          {\n                            headers: {'x-auth-token': _this.Common.xtoken, 'Content-Type': 'application/json'}\n                          })\n                          .then(response => {\n                              if (response.status == 200) {\n                                _this.$notify({title: 'Notification',message: 'Success!',duration: 3000});\n                                var nextdir={dirID: _this.current_dir_id}\n                                _this.flushDir(nextdir);\n                                _this.uploadpercentageshow=\"display:none\";\n                              }\n                          })\n                          .catch(function (error) {\n                            console.log(error.response);\n                          });\n                        }\n                    });\n                }\n                else\n                {\n                  _this.$notify({title: 'Notification',message: 'Success!',duration: 3000});\n                  var nextdir={dirID: _this.current_dir_id}\n                  _this.flushDir(nextdir);\n                  _this.uploadpercentage=100;\n                  _this.uploadpercentageshow=\"display:none\";\n                }\n              } \n              else\n              {\n                alert(\"Error:\"+response.data.msg);\n                console.log(response);\n              }\n              });\n\n          }\n      };\n\n      fileReader.onerror = function () {\n          console.warn('fileReader.onerror is error')\n      };\n\n      function loadNext() {\n          var start = currentChunk * chunkSize,\n              end = ((start + chunkSize) >= file.size) ? file.size : start + chunkSize;\n\n          fileReader.readAsArrayBuffer(blobSlice.call(file, start, end))\n      }\n      loadNext()\n    },\n    createfolder()\n    {\n      this.$http2.put(this.Common.baseurl+\"/api/dirs/\", \n      {\n        \"name\": this.newfoldername,\n        \"parent_id\": this.current_dir_id\n      }, \n      {\n        headers: {'x-auth-token': this.Common.xtoken}\n      })\n      .then(response => {\n          if (response.status == 200) {\n            this.$notify({title: 'Notification',message: 'Success!',duration: 3000});\n            var nextdir={dirID: this.current_dir_id}\n            this.flushDir(nextdir);\n          }\n      })\n      .catch(function (error) {\n        alert(\"Error: \"+error.response.data.msg);\n      });\n      this.newfoldershow=false;\n    },\n    backpredir()\n    {\n      var nextdir={dirID: this.pre_dir_id}\n      if(this.pre_dir_id != 0)\n      {\n        this.flushDir(nextdir);\n      }\n    }\n  },\n  created: function () \n  {\n    this.$bus.on('updateDirID', this.flushDir);\n  },\n  mounted: function () \n  {\n    this.$refs.setheight.style.height = ((this.$refs.getheight.offsetHeight)*0.80)+'px';\n    this.$api.get('/api/dirs', \n    {\n      'x-auth-token': this.Common.xtoken\n    },\n    {                      //'johnwick123@gmail.com',\n      only_dir: false                       //'1231234'\n    }, response => {\n    if (response.status == 200) \n    {\n      var folderslist;\n      var fileslist;\n\n      this.current_dir_id=response.data.result_data.curr_id;\n      this.pre_dir_id=response.data.result_data.pre_id;\n      folderslist = response.data.result_data.dirs;\n      fileslist = response.data.result_data.files;\n      for (var keyfolder in folderslist)\n      {\n        this.folderitems.push({getname: folderslist[keyfolder].name, getid: folderslist[keyfolder].id, getpreid: this.current_dir_id,getdate: folderslist[keyfolder].create_date});\n      }\n      for (var keyfile in fileslist)\n      {\n        this.fileitems.push({getname: fileslist[keyfile].name+\".\"+fileslist[keyfile].suffixes, getsize: fileslist[keyfile].size, getid: fileslist[keyfile].id, getpreid: this.current_dir_id,getdate:fileslist[keyfile].create_date});\n      }\n      \n    } \n    else if(response.status == 400)\n    {\n      alert(response.data.msg);\n      \n    }\n    else\n    {\n      alert(\"Network Error\");\n    }\n    });\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.filemanagement\n{\n  background-color:white;\n  margin: 0px;\n  padding: 0px;\n  height:100%;\n  width:100%;\n}\n.fileview\n{\n  text-align: left;\n}\n.toolview\n{\n  padding:0.5%;\n}\n.toolcompent\n{\n  float:left;\n  width:120px;\n}\n.fileviewscroll\n{\n  overflow-x:hidden; \n  border-top:1px solid #F2F6FD;\n}\n.typemenu\n{\n\n  width:100%;\n}\n.dirback:hover\n{\n  text-decoration: underline;\n}\n</style>\n"],"sourceRoot":"src/components/subpage"}]}