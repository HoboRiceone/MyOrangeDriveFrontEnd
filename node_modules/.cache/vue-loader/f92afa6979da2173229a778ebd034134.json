{"remainingRequest":"/home/hobo/code/odd6871/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hobo/code/odd6871/src/components/subpage/Filemanagement.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/hobo/code/odd6871/src/components/subpage/Filemanagement.vue","mtime":1587468442985},{"path":"/home/hobo/code/odd6871/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hobo/code/odd6871/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hobo/code/odd6871/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hobo/code/odd6871/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTcGFya01ENSBmcm9tICdzcGFyay1tZDUnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgZm9sZGVyaXRlbSBmcm9tICIuL0ZpbGVpdGVtcy9mb2xkZXJpdGVtIjsKaW1wb3J0IGZpbGVpdGVtIGZyb20gIi4vRmlsZWl0ZW1zL2ZpbGVpdGVtIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdGaWxlbWFuYWdlbWVudCcsCiAgZGF0YSAoKQogIHsKICAgIHJldHVybnsKICAgICAgZmlsZUxpc3Q6W3t9XSwKICAgICAgZm9sZGVyaXRlbXM6IFtdLAogICAgICBmaWxlaXRlbXM6IFtdLAogICAgICBjdXJyZW50X2Rpcl9pZDogLTEsCiAgICAgIGN1cnJlbnRfZGlyX25hbWU6ICdBbGwgZmlsZXMnLAogICAgfTsKICB9LAogIGNvbXBvbmVudHM6CiAgewogICAgZm9sZGVyaXRlbSwKICAgIGZpbGVpdGVtCiAgfSwKICBtZXRob2RzOgogIHsKICAgIGZsdXNoRGlyKG5ld0RpcikKICAgIHsKICAgICAgdGhpcy5jdXJyZW50X2Rpcl9pZCA9IG5ld0Rpci5kaXJJRDsKICAgICAgdGhpcy5mb2xkZXJpdGVtcyA9IFtdOwogICAgICB0aGlzLmZpbGVpdGVtcyA9IFtdOwogICAgICB0aGlzLiRhcGkuZ2V0KCcvYXBpL2RpcnN0ZXN0JywKICAgICAgewogICAgICAgICd4LWF1dGgtdG9rZW4nOiB0aGlzLkNvbW1vbi54dG9rZW4KICAgICAgfSwgCiAgICAgIHsKICAgICAgICBpZDogdGhpcy5jdXJyZW50X2Rpcl9pZCwgICAgICAgICAgICAgICAgICAgICAgICAvLydqb2hud2ljazEyM0BnbWFpbC5jb20nLAogICAgICAgIG9ubHlfZGlyOiBmYWxzZSAgICAgICAgICAgICAgICAgICAgICAgLy8nMTIzMTIzNCcKICAgICAgfSwgcmVzcG9uc2UgPT4gewogICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09IDIwMCkgCiAgICAgIHsKICAgICAgICB2YXIgZm9sZGVyc2xpc3Q7CiAgICAgICAgdmFyIGZpbGVzbGlzdDsKCiAgICAgICAgdGhpcy5jdXJyZW50X2Rpcl9uYW1lPXJlc3BvbnNlLmRhdGEucmVzdWx0X2RhdGEubmFtZSsiLyIKICAgICAgICBmb2xkZXJzbGlzdCA9IHJlc3BvbnNlLmRhdGEucmVzdWx0X2RhdGEuZGlyczsKICAgICAgICBmaWxlc2xpc3QgPSByZXNwb25zZS5kYXRhLnJlc3VsdF9kYXRhLmZpbGVzOwogICAgICAgIGZvciAodmFyIGtleWZvbGRlciBpbiBmb2xkZXJzbGlzdCkKICAgICAgICB7CiAgICAgICAgICB0aGlzLmZvbGRlcml0ZW1zLnB1c2goe2dldG5hbWU6IGZvbGRlcnNsaXN0W2tleWZvbGRlcl0ubmFtZSwgZ2V0aWQ6IGZvbGRlcnNsaXN0W2tleWZvbGRlcl0uaWR9KTsKICAgICAgICB9CiAgICAgICAgZm9yICh2YXIga2V5ZmlsZSBpbiBmaWxlc2xpc3QpCiAgICAgICAgewogICAgICAgICAgdGhpcy5maWxlaXRlbXMucHVzaCh7Z2V0bmFtZTogZmlsZXNsaXN0W2tleWZpbGVdLm5hbWV9KTsKICAgICAgICB9CiAgICAgICAgCiAgICAgIH0gCiAgICAgIGVsc2UgaWYocmVzcG9uc2Uuc3RhdHVzID09IDQwMCkKICAgICAgewogICAgICAgIGFsZXJ0KHJlc3BvbnNlLmRhdGEubXNnKTsKICAgICAgICAKICAgICAgfQogICAgICBlbHNlCiAgICAgIHsKICAgICAgICBhbGVydCgiTmV0d29yayBFcnJvciIpOwogICAgICB9CiAgICAgIH0pOwogICAgfSwKCiAgICB1cGxvYWQocmVzKQogICAgewogICAgICAgIGxldCBmaWxlID0gcmVzLmZpbGU7ICAvL+azqOaEj++8muebtOaOpeS4iuS8oGZpbGXmlofku7bvvIzkuI3opoHnlKhGb3JtRGF0YeWvueixoeeahOW9ouW8j+S8oAogICAgICAgIGxldCBjb25maWcgPSB7CiAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgLy/ku47mjqXlj6Pojrflj5ZwcmVzaWduZWQgdXJsCiAgICAgICAgdmFyIHByZXNpZ25lZFVybD0naHR0cHM6Ly9teS1idWNrZXQtZ2xhaS0wMS5zMy51cy1lYXN0LTIuYW1hem9uYXdzLmNvbS9mZDE/WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotRGF0ZT0yMDIwMDQxOFQxNTE3MzNaJlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZYLUFtei1FeHBpcmVzPTI1MTk5JlgtQW16LUNyZWRlbnRpYWw9QUtJQVVJSEFZQ1hSWjNSRFRNVDMlMkYyMDIwMDQxOCUyRnVzLWVhc3QtMiUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LVNpZ25hdHVyZT0zOTZjMGYzMGFhZTNmZWVlYjE4YzVmYzIzYzc2OTllY2Y0MmJiOWI1YTJjYWMzOGUxNTBjYTY4NzkzZTBhZTIwJzsKICAgICAgICAgICAgICAgIC8v6ZyA6KaB55SocHV05pa55rOV5LiK5Lyg77yMcG9zdOS8muaKpTQwNe+8jGF3c+WumOaWueinhOWumuaYr3B1dOaWueazlQogICAgICAgIC8vIGF4aW9zLnB1dChwcmVzaWduZWRVcmwsIGZpbGUsIGNvbmZpZykKICAgICAgICAvLyAgICAgLnRoZW4ocmVzMSA9PiB7CiAgICAgICAgLy8gICAgICAgICBpZiAocmVzMS5zdGF0dXMgPT0gMjAwKSB7CiAgICAgICAgLy8gICAgICAgICAgIGNvbnNvbGUubG9nKHJlczEpOwogICAgICAgIC8vICAgICAgICAgfQogICAgICAgIC8vICAgICB9KTsKICAgICAgICB0aGlzLmdlbmVyYXRvckZpbGVNZDUoZmlsZSk7CiAgICB9LAogICAgZmlsZWRvd25sb2FkKCkKICAgIHsKICAgICAgdmFyIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7CiAgICAgIGxpbmsuZG93bmxvYWQ9J3RleHQnOwogICAgICBsaW5rLmhyZWYgPSAiaHR0cHM6Ly9teS1idWNrZXQtZ2xhaS0wMS5zMy51cy1lYXN0LTIuYW1hem9uYXdzLmNvbS9BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQV8zNDU2MzI0P3Jlc3BvbnNlLWNvbnRlbnQtZGlzcG9zaXRpb249YXR0YWNobWVudCUzQmZpbGVuYW1lJTNEaGVsbG8ta2l0dHkucGRmJlgtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LURhdGU9MjAyMDA0MThUMTQ1NzA2WiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmWC1BbXotRXhwaXJlcz02MDQ3OTkmWC1BbXotQ3JlZGVudGlhbD1BS0lBVUlIQVlDWFJaM1JEVE1UMyUyRjIwMjAwNDE4JTJGdXMtZWFzdC0yJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotU2lnbmF0dXJlPWZlMWM3M2EyN2Y2ZGU5MzQwZTA1ZmUxOTgyZTE2MjQxZDU2YzY4MDY1YTgwN2RmZGE5ODgyOTc2ZmRmZmJkZWYiOwogICAgICBsaW5rLmNsaWNrKCk7CiAgICB9LAogICAgZ2VuZXJhdG9yRmlsZU1kNShmaWxlKSB7CiAgICAgIC8qKgogICAgICAgICog55Sf5oiQTUQ1CiAgICAgICAgKi8KICAgICAgbGV0IGJsb2JTbGljZSA9IEZpbGUucHJvdG90eXBlLnNsaWNlIHx8IEZpbGUucHJvdG90eXBlLm1velNsaWNlIHx8IEZpbGUucHJvdG90eXBlLndlYmtpdFNsaWNlCiAgICAgICAgLy8gZmlsZSA9IHRoaXMuZmlsZXNbMF0sCiAgICAgIGxldCBjaHVua1NpemUgPSAyMDk3MTUyICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gUmVhZCBpbiBjaHVua3Mgb2YgMk1CCiAgICAgIGxldCBjaHVua3MgPSBNYXRoLmNlaWwoZmlsZS5zaXplIC8gY2h1bmtTaXplKQogICAgICBsZXQgY3VycmVudENodW5rID0gMAogICAgICBsZXQgc3BhcmsgPSBuZXcgU3BhcmtNRDUuQXJyYXlCdWZmZXIoKQogICAgICBsZXQgZmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCkKICAgICAgZmlsZVJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoZSkgewogICAgICAgICAgLy8gY29uc29sZS5sb2coJ3JlYWQgY2h1bmsgbnInLCBjdXJyZW50Q2h1bmsgKyAxLCAnb2YnLCBjaHVua3MpCiAgICAgICAgICBzcGFyay5hcHBlbmQoZS50YXJnZXQucmVzdWx0KSAgICAgICAgICAgICAgICAgIC8vIEFwcGVuZCBhcnJheSBidWZmZXIKICAgICAgICAgIGN1cnJlbnRDaHVuaysrOwoKICAgICAgICAgIGlmIChjdXJyZW50Q2h1bmsgPCBjaHVua3MpIHsKICAgICAgICAgICAgICBsb2FkTmV4dCgpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAvLyBjb25zb2xlLmluZm8oJ2NvbXB1dGVkIGhhc2gnLCBzcGFyay5lbmQoKSkgIC8vIHNwYXJrLmVuZCgpOiDmlofku7YgTUQ15YC855Sf5oiQ5a6M5oiQCiAgICAgICAgICAgICAgY29uc29sZS5sb2coc3BhcmsuZW5kKCkpCiAgICAgICAgICB9CiAgICAgIH07CgogICAgICBmaWxlUmVhZGVyLm9uZXJyb3IgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBjb25zb2xlLndhcm4oJ2ZpbGVSZWFkZXIub25lcnJvciBpcyBlcnJvcicpCiAgICAgIH07CgogICAgICBmdW5jdGlvbiBsb2FkTmV4dCgpIHsKICAgICAgICAgIHZhciBzdGFydCA9IGN1cnJlbnRDaHVuayAqIGNodW5rU2l6ZSwKICAgICAgICAgICAgICBlbmQgPSAoKHN0YXJ0ICsgY2h1bmtTaXplKSA+PSBmaWxlLnNpemUpID8gZmlsZS5zaXplIDogc3RhcnQgKyBjaHVua1NpemU7CgogICAgICAgICAgZmlsZVJlYWRlci5yZWFkQXNBcnJheUJ1ZmZlcihibG9iU2xpY2UuY2FsbChmaWxlLCBzdGFydCwgZW5kKSkKICAgICAgfQoKICAgICAgbG9hZE5leHQoKQogICAgfQoKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uICgpIAogIHsKICAgIHRoaXMuJGJ1cy5vbigndXBkYXRlRGlySUQnLCB0aGlzLmZsdXNoRGlyKTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uICgpIAogIHsKICAgIHRoaXMuJHJlZnMuc2V0aGVpZ2h0LnN0eWxlLmhlaWdodCA9ICgodGhpcy4kcmVmcy5nZXRoZWlnaHQub2Zmc2V0SGVpZ2h0KSowLjg0KSsncHgnOwogICAgdGhpcy4kYXBpLmdldCgnL2FwaS9kaXJzJywgCiAgICB7CiAgICAgICd4LWF1dGgtdG9rZW4nOiB0aGlzLkNvbW1vbi54dG9rZW4KICAgIH0sCiAgICB7CiAgICAgIGlkOiAtMSwgICAgICAgICAgICAgICAgICAgICAgICAvLydqb2hud2ljazEyM0BnbWFpbC5jb20nLAogICAgICBvbmx5X2RpcjogZmFsc2UgICAgICAgICAgICAgICAgICAgICAgIC8vJzEyMzEyMzQnCiAgICB9LCByZXNwb25zZSA9PiB7CiAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09IDIwMCkgCiAgICB7CiAgICAgIHZhciBmb2xkZXJzbGlzdDsKICAgICAgdmFyIGZpbGVzbGlzdDsKCiAgICAgIGZvbGRlcnNsaXN0ID0gcmVzcG9uc2UuZGF0YS5yZXN1bHRfZGF0YS5kaXJzOwogICAgICBmaWxlc2xpc3QgPSByZXNwb25zZS5kYXRhLnJlc3VsdF9kYXRhLmZpbGVzOwogICAgICBmb3IgKHZhciBrZXlmb2xkZXIgaW4gZm9sZGVyc2xpc3QpCiAgICAgIHsKICAgICAgICB0aGlzLmZvbGRlcml0ZW1zLnB1c2goe2dldG5hbWU6IGZvbGRlcnNsaXN0W2tleWZvbGRlcl0ubmFtZSwgZ2V0aWQ6IGZvbGRlcnNsaXN0W2tleWZvbGRlcl0uaWR9KTsKICAgICAgfQogICAgICBmb3IgKHZhciBrZXlmaWxlIGluIGZpbGVzbGlzdCkKICAgICAgewogICAgICAgIHRoaXMuZmlsZWl0ZW1zLnB1c2goe2dldG5hbWU6IGZpbGVzbGlzdFtrZXlmaWxlXS5uYW1lfSk7CiAgICAgIH0KICAgICAgCiAgICB9IAogICAgZWxzZSBpZihyZXNwb25zZS5zdGF0dXMgPT0gNDAwKQogICAgewogICAgICBhbGVydChyZXNwb25zZS5kYXRhLm1zZyk7CiAgICAgIAogICAgfQogICAgZWxzZQogICAgewogICAgICBhbGVydCgiTmV0d29yayBFcnJvciIpOwogICAgfQogICAgfSk7CiAgfQp9Cg=="},{"version":3,"sources":["Filemanagement.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"Filemanagement.vue","sourceRoot":"src/components/subpage","sourcesContent":["<template>\n  <div ref=\"getheight\" class=\"filemanagement\">\n    <el-container style=\"width:99%; margin: 0px; padding: 0px;  border:0px;\">\n      <el-header class=\"toolview\">\n      <el-upload\n        style=\"float:left;margin-right:1%\"\n          action=\"123\"\n          :http-request=\"upload\"\n          :with-credentials=\"true\"\n          :show-file-list=\"false\">\n          <el-button type=\"primary\" style=\"width:120px;\">Upload</el-button>\n        </el-upload>\n        <el-button class=\"toolcompent\" type=\"primary\" @click=\"filedownload\" plain>Download</el-button>\n      </el-header>\n      <div>\n         <h4 style=\"text-align: left;height:0.5%;margin: 0;margin-left:0.7%\">{{current_dir_name}}</h4>\n      </div>  \n      <div class=\"typemenu\">\n        <p style=\"text-align: left;margin:0;margin-left:2.3%;width:30%;float:left;\">file name</p>\n        <p style=\"text-align: left;margin:0;width:20%;float:left;\">size</p>\n      </div>\n      <div style=\"height:2%\"></div>\n      <div ref=\"setheight\" class=\"fileviewscroll\">\n        <div v-for=\"(item,index) in folderitems\" :key=\"'folder'+index\" style=\"padding: 0px;display:block;\">\n            <folderitem :foldername=\"item.getname\" :folderid=\"item.getid\"></folderitem>\n        </div>\n        <div v-for=\"(item,index) in fileitems\" :key=\"'file'+index\">\n            <fileitem :filename=\"item.getname\"></fileitem>\n        </div>\n      </div>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport SparkMD5 from 'spark-md5';\nimport axios from 'axios';\nimport folderitem from \"./Fileitems/folderitem\";\nimport fileitem from \"./Fileitems/fileitem\";\nexport default {\n  name: 'Filemanagement',\n  data ()\n  {\n    return{\n      fileList:[{}],\n      folderitems: [],\n      fileitems: [],\n      current_dir_id: -1,\n      current_dir_name: 'All files',\n    };\n  },\n  components:\n  {\n    folderitem,\n    fileitem\n  },\n  methods:\n  {\n    flushDir(newDir)\n    {\n      this.current_dir_id = newDir.dirID;\n      this.folderitems = [];\n      this.fileitems = [];\n      this.$api.get('/api/dirstest',\n      {\n        'x-auth-token': this.Common.xtoken\n      }, \n      {\n        id: this.current_dir_id,                        //'johnwick123@gmail.com',\n        only_dir: false                       //'1231234'\n      }, response => {\n      if (response.status == 200) \n      {\n        var folderslist;\n        var fileslist;\n\n        this.current_dir_name=response.data.result_data.name+\"/\"\n        folderslist = response.data.result_data.dirs;\n        fileslist = response.data.result_data.files;\n        for (var keyfolder in folderslist)\n        {\n          this.folderitems.push({getname: folderslist[keyfolder].name, getid: folderslist[keyfolder].id});\n        }\n        for (var keyfile in fileslist)\n        {\n          this.fileitems.push({getname: fileslist[keyfile].name});\n        }\n        \n      } \n      else if(response.status == 400)\n      {\n        alert(response.data.msg);\n        \n      }\n      else\n      {\n        alert(\"Network Error\");\n      }\n      });\n    },\n\n    upload(res)\n    {\n        let file = res.file;  //注意：直接上传file文件，不要用FormData对象的形式传\n        let config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        };\n        //从接口获取presigned url\n        var presignedUrl='https://my-bucket-glai-01.s3.us-east-2.amazonaws.com/fd1?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20200418T151733Z&X-Amz-SignedHeaders=host&X-Amz-Expires=25199&X-Amz-Credential=AKIAUIHAYCXRZ3RDTMT3%2F20200418%2Fus-east-2%2Fs3%2Faws4_request&X-Amz-Signature=396c0f30aae3feeeb18c5fc23c7699ecf42bb9b5a2cac38e150ca68793e0ae20';\n                //需要用put方法上传，post会报405，aws官方规定是put方法\n        // axios.put(presignedUrl, file, config)\n        //     .then(res1 => {\n        //         if (res1.status == 200) {\n        //           console.log(res1);\n        //         }\n        //     });\n        this.generatorFileMd5(file);\n    },\n    filedownload()\n    {\n      var link = document.createElement('a');\n      link.download='text';\n      link.href = \"https://my-bucket-glai-01.s3.us-east-2.amazonaws.com/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA_3456324?response-content-disposition=attachment%3Bfilename%3Dhello-kitty.pdf&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Date=20200418T145706Z&X-Amz-SignedHeaders=host&X-Amz-Expires=604799&X-Amz-Credential=AKIAUIHAYCXRZ3RDTMT3%2F20200418%2Fus-east-2%2Fs3%2Faws4_request&X-Amz-Signature=fe1c73a27f6de9340e05fe1982e16241d56c68065a807dfda9882976fdffbdef\";\n      link.click();\n    },\n    generatorFileMd5(file) {\n      /**\n        * 生成MD5\n        */\n      let blobSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice\n        // file = this.files[0],\n      let chunkSize = 2097152                           // Read in chunks of 2MB\n      let chunks = Math.ceil(file.size / chunkSize)\n      let currentChunk = 0\n      let spark = new SparkMD5.ArrayBuffer()\n      let fileReader = new FileReader()\n      fileReader.onload = function (e) {\n          // console.log('read chunk nr', currentChunk + 1, 'of', chunks)\n          spark.append(e.target.result)                  // Append array buffer\n          currentChunk++;\n\n          if (currentChunk < chunks) {\n              loadNext();\n          } else {\n              // console.info('computed hash', spark.end())  // spark.end(): 文件 MD5值生成完成\n              console.log(spark.end())\n          }\n      };\n\n      fileReader.onerror = function () {\n          console.warn('fileReader.onerror is error')\n      };\n\n      function loadNext() {\n          var start = currentChunk * chunkSize,\n              end = ((start + chunkSize) >= file.size) ? file.size : start + chunkSize;\n\n          fileReader.readAsArrayBuffer(blobSlice.call(file, start, end))\n      }\n\n      loadNext()\n    }\n\n  },\n  created: function () \n  {\n    this.$bus.on('updateDirID', this.flushDir);\n  },\n  mounted: function () \n  {\n    this.$refs.setheight.style.height = ((this.$refs.getheight.offsetHeight)*0.84)+'px';\n    this.$api.get('/api/dirs', \n    {\n      'x-auth-token': this.Common.xtoken\n    },\n    {\n      id: -1,                        //'johnwick123@gmail.com',\n      only_dir: false                       //'1231234'\n    }, response => {\n    if (response.status == 200) \n    {\n      var folderslist;\n      var fileslist;\n\n      folderslist = response.data.result_data.dirs;\n      fileslist = response.data.result_data.files;\n      for (var keyfolder in folderslist)\n      {\n        this.folderitems.push({getname: folderslist[keyfolder].name, getid: folderslist[keyfolder].id});\n      }\n      for (var keyfile in fileslist)\n      {\n        this.fileitems.push({getname: fileslist[keyfile].name});\n      }\n      \n    } \n    else if(response.status == 400)\n    {\n      alert(response.data.msg);\n      \n    }\n    else\n    {\n      alert(\"Network Error\");\n    }\n    });\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.filemanagement\n{\n  background-color:white;\n  margin: 0px;\n  padding: 0px;\n  height:100%;\n  width:100%;\n}\n.fileview\n{\n  text-align: left;\n}\n.toolview\n{\n  padding:0.5%;\n}\n.toolcompent\n{\n  float:left;\n  width:120px;\n}\n.fileviewscroll\n{\n  overflow-x:hidden; \n  border-top:1px solid #F2F6FD;\n}\n.typemenu\n{\n\n  width:100%;\n}\n</style>\n"]}]}