{"remainingRequest":"/home/hobo/code/odd6871/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hobo/code/odd6871/src/components/subpage/Fileitems/folderitem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/hobo/code/odd6871/src/components/subpage/Fileitems/folderitem.vue","mtime":1588495074279},{"path":"/home/hobo/code/odd6871/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hobo/code/odd6871/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hobo/code/odd6871/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hobo/code/odd6871/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hobo/code/odd6871/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnZm9sZGVyaXRlbScsCiAgcHJvcHM6Wydmb2xkZXJuYW1lJywnZm9sZGVyaWQnLCdmb2xkZXJwcmVpZCcsJ2NyZWF0ZWRkYXRlJ10sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBidXR0b25zdHlsZTogInZpc2liaWxpdHk6aGlkZGVuIiwKICAgICAgZGlhbG9nbW92ZVZpc2libGU6IGZhbHNlLAogICAgICBtb3ZldGFibGVEYXRhOiBbXSwKICAgICAgbW92ZWN1cnJlbnRkaXJuYW1lOiAiQWxsIGZpbGVzIiwKICAgICAgbW92ZWZvbGRlcmxpc3Q6W10sCiAgICAgIG1vdmVjdXJyZW50aWQ6IDAKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiAoKSAKICB7CiAgfSwKICBtZXRob2RzOgogIHsKICAgIHJvd2NsaWNrKHJvdykKICAgIHsKICAgICAgaWYocm93Lm1vdmVkaXJpZCAhPSAwKQogICAgICB7CiAgICAgICAgdGhpcy5tb3ZldGFibGVEYXRhPSBbXTsKICAgICAgICB0aGlzLmdldGxpc3Qocm93Lm1vdmVkaXJpZCk7CiAgICAgIH0KICAgIH0sCiAgICBidXR0b25zaG93KCkKICAgIHsKICAgICAgdGhpcy5idXR0b25zdHlsZT0idmlzaWJpbGl0eTp2aXNpYmxlIjsKICAgIH0sCiAgICBidXR0b25oaWRkZW4oKQogICAgewogICAgICB0aGlzLmJ1dHRvbnN0eWxlPSJ2aXNpYmlsaXR5OmhpZGRlbiI7CiAgICB9LAogICAgZ2V0aW50bygpCiAgICB7CiAgICAgIHRoaXMuJGJ1cy5lbWl0KCd1cGRhdGVEaXJJRCcse2RpcklEOiB0aGlzLmZvbGRlcmlkfSk7CiAgICB9LAogICAgZGVsZXRlZm9sZGVyKCkKICAgIHsKICAgICAgdGhpcy4kY29uZmlybSgnVGhpcyBvcGVyYXRpb24gd2lsbCBkZWxldGUgdGhpcyBmb2xkZXI6Jyt0aGlzLmZvbGRlcm5hbWUsICdEZWxldGUnLCB7CiAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ0NvbmZpcm0nLAogICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ0NhbmNlbCcsCiAgICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgICB9KS50aGVuKCgpID0+IHsKICAgICAgICAgIHRoaXMuJGFwaS5kZWxldGUoJy9hcGkvZGlycy8nK3RoaXMuZm9sZGVyaWQsIAogICAgICAgICAgewogICAgICAgICAgICAneC1hdXRoLXRva2VuJzogdGhpcy5Db21tb24ueHRva2VuCiAgICAgICAgICB9LCAKICAgICAgICAgIHsKICAgICAgICAgIH0sIHJlc3BvbnNlID0+IHsKICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT0gMjAwKSAKICAgICAgICAgIHsKICAgICAgICAgICAgdGhpcy4kbWVzc2FnZSh7dHlwZTogJ3N1Y2Nlc3MnLG1lc3NhZ2U6ICdTdWNjZXNzISd9KTsKICAgICAgICAgICAgdGhpcy4kYnVzLmVtaXQoJ3VwZGF0ZURpcklEJyx7ZGlySUQ6IHRoaXMuZm9sZGVycHJlaWR9KTsKICAgICAgICAgIH0gCiAgICAgICAgICBlbHNlIGlmKHJlc3BvbnNlLnN0YXR1cyA9PSA0MDApCiAgICAgICAgICB7CiAgICAgICAgICAgIGFsZXJ0KHJlc3BvbnNlLmRhdGEubXNnKTsKICAgICAgICAgICAgCiAgICAgICAgICB9CiAgICAgICAgICBlbHNlCiAgICAgICAgICB7CiAgICAgICAgICAgIGFsZXJ0KCJOZXR3b3JrIEVycm9yIik7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0pLmNhdGNoKCgpID0+IHsKICAgICAgICB0aGlzLiRtZXNzYWdlKHsKICAgICAgICAgIHR5cGU6ICdpbmZvJywKICAgICAgICAgIG1lc3NhZ2U6ICdDYW5jZWxlZCcKICAgICAgICB9KTsgICAgICAgICAgCiAgICAgIH0pOwogICAgfSwKICAgIHJlbmFtZSgpIAogICAgewogICAgICAgIHRoaXMuJHByb21wdCgnUGxlYXNlIGVudGVyIGEgbmV3IG5hbWUnLCAnUmVuYW1lJywgewogICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICdDb25maXJtJywKICAgICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICdDYW5jZWwnLAogICAgICAgICAgaW5wdXRQbGFjZWhvbGRlcjogIk5ldyBOYW1lIiwKICAgICAgICB9KS50aGVuKCh7IHZhbHVlIH0pID0+IHsKICAgICAgICAgIHRoaXMuJGh0dHAyLnBvc3QodGhpcy5Db21tb24uYmFzZXVybCsiL2FwaS9kaXJzLyIrdGhpcy5mb2xkZXJpZCwgCiAgICAgICAgICB7Im5hbWUiOnZhbHVlfSwgCiAgICAgICAgICB7CiAgICAgICAgICAgIGhlYWRlcnM6IHsneC1hdXRoLXRva2VuJzogdGhpcy5Db21tb24ueHRva2VuLCAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nfQogICAgICAgICAgfSkKICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09IDIwMCkgewogICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZSh7dHlwZTogJ3N1Y2Nlc3MnLG1lc3NhZ2U6ICdTdWNjZXNzISd9KTsKICAgICAgICAgICAgICAgIHRoaXMuJGJ1cy5lbWl0KCd1cGRhdGVEaXJJRCcse2RpcklEOiB0aGlzLmZvbGRlcnByZWlkfSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgfSkKICAgICAgICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IucmVzcG9uc2UpOwogICAgICAgICAgfSk7CiAgICAgICAgfSkuY2F0Y2goKCkgPT4geyAgICAgCiAgICAgICAgfSk7CiAgICB9LAogICAgbW92ZXByZXBhcmUoKQogICAgewogICAgICB0aGlzLmRpYWxvZ21vdmVWaXNpYmxlID0gdHJ1ZTsKICAgICAgdGhpcy5tb3ZldGFibGVEYXRhPSBbXTsKICAgICAgdGhpcy5nZXRsaXN0KHRoaXMuZm9sZGVycHJlaWQpOwoKICAgIH0sCiAgICBtb3ZlKCkKICAgIHsKICAgICAgdGhpcy5kaWFsb2dtb3ZlVmlzaWJsZSA9IGZhbHNlOwogICAgICB0aGlzLiRodHRwMi5wb3N0KHRoaXMuQ29tbW9uLmJhc2V1cmwrIi9hcGkvZGlycyIsIAogICAgICB7CiAgICAgICAgImZyb21fZGlyX2lkIjogdGhpcy5mb2xkZXJpZCwKICAgICAgICAidG9faWQiOiB0aGlzLm1vdmVjdXJyZW50aWQKICAgICAgfSwgCiAgICAgIHsKICAgICAgICBoZWFkZXJzOiB7J3gtYXV0aC10b2tlbic6IHRoaXMuQ29tbW9uLnh0b2tlbiwgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ30KICAgICAgfSkKICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PSAyMDApIHsKICAgICAgICAgICAgdGhpcy4kbWVzc2FnZSh7dHlwZTogJ3N1Y2Nlc3MnLG1lc3NhZ2U6ICdTdWNjZXNzISd9KTsKICAgICAgICAgICAgdGhpcy4kYnVzLmVtaXQoJ3VwZGF0ZURpcklEJyx7ZGlySUQ6IHRoaXMuZm9sZGVycHJlaWR9KTsKICAgICAgICAgIH0KICAgICAgfSkKICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yLnJlc3BvbnNlKTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0bGlzdChpZCkKICAgIHsKICAgICAgdGhpcy4kYXBpLmdldCgnL2FwaS9kaXJzLycraWQsCiAgICAgIHsKICAgICAgICAneC1hdXRoLXRva2VuJzogdGhpcy5Db21tb24ueHRva2VuCiAgICAgIH0sIAogICAgICB7CiAgICAgICAgb25seV9kaXI6IHRydWUgICAgICAgICAgICAgICAgICAgICAgIC8vJzEyMzEyMzQnCiAgICAgIH0sIHJlc3BvbnNlID0+IHsKICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PSAyMDApIAogICAgICB7CiAgICAgICAgdGhpcy5tb3ZlY3VycmVudGRpcm5hbWU9Ii8iK3Jlc3BvbnNlLmRhdGEucmVzdWx0X2RhdGEubmFtZTsKICAgICAgICB0aGlzLm1vdmVjdXJyZW50aWQ9cmVzcG9uc2UuZGF0YS5yZXN1bHRfZGF0YS5jdXJyX2lkOwogICAgICAgIHRoaXMubW92ZXRhYmxlRGF0YS5wdXNoKHttb3ZlZGlybmFtZTogIi4uIiwgbW92ZWRpcmlkOiByZXNwb25zZS5kYXRhLnJlc3VsdF9kYXRhLnByZV9pZH0pOwogICAgICAgIHZhciBmb2xkZXJzbGlzdCA9IHJlc3BvbnNlLmRhdGEucmVzdWx0X2RhdGEuZGlyczsKCiAgICAgICAgZm9yICh2YXIga2V5Zm9sZGVyIGluIGZvbGRlcnNsaXN0KQogICAgICAgIHsKICAgICAgICAgIHRoaXMubW92ZXRhYmxlRGF0YS5wdXNoKHttb3ZlZGlybmFtZTogZm9sZGVyc2xpc3Rba2V5Zm9sZGVyXS5uYW1lLCBtb3ZlZGlyaWQ6IGZvbGRlcnNsaXN0W2tleWZvbGRlcl0uaWR9KTsKICAgICAgICB9CiAgICAgIH0gCiAgICAgIGVsc2UKICAgICAgewogICAgICAgIGFsZXJ0KCJFcnJvciIpOwogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKICAgICAgfQogICAgICB9KTsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["folderitem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"folderitem.vue","sourceRoot":"src/components/subpage/Fileitems","sourcesContent":["<template>\n  <div  class=\"folderitem\" @mouseover=\"buttonshow\" @mouseout=\"buttonhidden\">\n    <div style=\" margin-left:1.8%;width:30%;float:left;\">\n      <div style=\"font-size:1.2em;float:left;\">\n        <i class=\"el-icon-folder\"></i> \n      </div>\n      <div class=\"intofolder\" style=\"font-size:1.2em;float:left;margin-left:0.6%;\" @click=\"getinto\">\n        {{foldername}}\n      </div>\n    </div>\n    <div style=\"width:20%;float:left;font-size:1.2em;text-align: left;\">\n      -\n    </div>\n    <div style=\"width:20%;float:left;font-size:1.2em;text-align: left;\">\n      {{createddate}}\n    </div>\n    <div style=\"float:left;font-size:1.2em;text-align: left;\">\n      <el-button :style=\"buttonstyle\" icon=\"el-icon-edit\" circle @click=\"rename\"></el-button>\n      <el-button :style=\"buttonstyle\" icon=\"el-icon-shopping-cart-full\" circle @click=\"moveprepare\"></el-button>\n      <el-button :style=\"buttonstyle\" icon=\"el-icon-delete\" circle @click=\"deletefolder\"></el-button>\n      <!-- <el-button icon=\"el-icon-link\" circle></el-button> -->\n    </div>\n\n    <el-dialog width=\"20%\" title=\"Move this folder to...\" :visible.sync=\"dialogmoveVisible\">\n      <el-table\n        :data=\"movetableData\"\n        @row-click=\"rowclick\"\n        style=\"width: 100%\">\n        <el-table-column\n          v-bind:label=\"movecurrentdirname\" >\n          <template slot-scope=\"scope\">\n            <i class=\"el-icon-folder\"></i>\n            <span style=\"margin-left: 10px\">{{ scope.row.movedirname }}</span>\n          </template>\n        </el-table-column>\n      </el-table>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogmoveVisible = false\">Cancel</el-button>\n        <el-button type=\"primary\" @click=\"move\">Move</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'folderitem',\n  props:['foldername','folderid','folderpreid','createddate'],\n  data () {\n    return {\n      buttonstyle: \"visibility:hidden\",\n      dialogmoveVisible: false,\n      movetableData: [],\n      movecurrentdirname: \"All files\",\n      movefolderlist:[],\n      movecurrentid: 0\n    };\n  },\n  mounted: function () \n  {\n  },\n  methods:\n  {\n    rowclick(row)\n    {\n      if(row.movedirid != 0)\n      {\n        this.movetableData= [];\n        this.getlist(row.movedirid);\n      }\n    },\n    buttonshow()\n    {\n      this.buttonstyle=\"visibility:visible\";\n    },\n    buttonhidden()\n    {\n      this.buttonstyle=\"visibility:hidden\";\n    },\n    getinto()\n    {\n      this.$bus.emit('updateDirID',{dirID: this.folderid});\n    },\n    deletefolder()\n    {\n      this.$confirm('This operation will delete this folder:'+this.foldername, 'Delete', {\n          confirmButtonText: 'Confirm',\n          cancelButtonText: 'Cancel',\n          type: 'warning'\n        }).then(() => {\n          this.$api.delete('/api/dirs/'+this.folderid, \n          {\n            'x-auth-token': this.Common.xtoken\n          }, \n          {\n          }, response => {\n          if (response.status == 200) \n          {\n            this.$message({type: 'success',message: 'Success!'});\n            this.$bus.emit('updateDirID',{dirID: this.folderpreid});\n          } \n          else if(response.status == 400)\n          {\n            alert(response.data.msg);\n            \n          }\n          else\n          {\n            alert(\"Network Error\");\n            console.log(response);\n          }\n          });\n        }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: 'Canceled'\n        });          \n      });\n    },\n    rename() \n    {\n        this.$prompt('Please enter a new name', 'Rename', {\n          confirmButtonText: 'Confirm',\n          cancelButtonText: 'Cancel',\n          inputPlaceholder: \"New Name\",\n        }).then(({ value }) => {\n          this.$http2.post(this.Common.baseurl+\"/api/dirs/\"+this.folderid, \n          {\"name\":value}, \n          {\n            headers: {'x-auth-token': this.Common.xtoken, 'Content-Type': 'application/json'}\n          })\n          .then(response => {\n              if (response.status == 200) {\n                this.$message({type: 'success',message: 'Success!'});\n                this.$bus.emit('updateDirID',{dirID: this.folderpreid});\n              }\n          })\n          .catch(function (error) {\n            console.log(error.response);\n          });\n        }).catch(() => {     \n        });\n    },\n    moveprepare()\n    {\n      this.dialogmoveVisible = true;\n      this.movetableData= [];\n      this.getlist(this.folderpreid);\n\n    },\n    move()\n    {\n      this.dialogmoveVisible = false;\n      this.$http2.post(this.Common.baseurl+\"/api/dirs\", \n      {\n        \"from_dir_id\": this.folderid,\n        \"to_id\": this.movecurrentid\n      }, \n      {\n        headers: {'x-auth-token': this.Common.xtoken, 'Content-Type': 'application/json'}\n      })\n      .then(response => {\n          if (response.status == 200) {\n            this.$message({type: 'success',message: 'Success!'});\n            this.$bus.emit('updateDirID',{dirID: this.folderpreid});\n          }\n      })\n      .catch(function (error) {\n        console.log(error.response);\n      });\n    },\n    getlist(id)\n    {\n      this.$api.get('/api/dirs/'+id,\n      {\n        'x-auth-token': this.Common.xtoken\n      }, \n      {\n        only_dir: true                       //'1231234'\n      }, response => {\n      if (response.status == 200) \n      {\n        this.movecurrentdirname=\"/\"+response.data.result_data.name;\n        this.movecurrentid=response.data.result_data.curr_id;\n        this.movetableData.push({movedirname: \"..\", movedirid: response.data.result_data.pre_id});\n        var folderslist = response.data.result_data.dirs;\n\n        for (var keyfolder in folderslist)\n        {\n          this.movetableData.push({movedirname: folderslist[keyfolder].name, movedirid: folderslist[keyfolder].id});\n        }\n      } \n      else\n      {\n        alert(\"Error\");\n        console.log(response);\n      }\n      });\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.folderitem\n{\n  padding:0.5%;\n  width:100%;\n  display:inline-block;\n  margin: 0;\n\n}\n.folderitem:hover\n{\n  background-color:#F5F7FA;\n}\n.intofolder:hover\n{\n  color:#409EFF;\n}\n.dirback:hover\n{\n  text-decoration: underline;\n}\n</style>\n"]}]}